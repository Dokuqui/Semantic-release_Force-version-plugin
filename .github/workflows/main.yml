name: Force Version CI/CD

on:
  push:
    branches:
      - main
  
  pull_request:
    branches: [ main ]

permissions:
  pull-requests: write
  issues: write
  repository-projects: write
  packages: write
  id-token: write
  contents: write

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.PERSO_GITHUB }}
          VALIDATE_JSCPD: false
          VALIDATE_TYPESCRIPT_STANDARD: false
          VALIDATE_MARKDOWN: false

  install:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.1'

      - name: Install dependencies
        run: npm ci

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Save dependencies cache
        if: success()
        run: |
          mkdir -p ~/.npm
          cp -R node_modules ~/.npm/

  test:
    runs-on: ubuntu-latest
    needs: install
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.1'
        
      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
              ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
              ${{ runner.os }}-node-
        
      - name: Install dependencies
        run: npm ci
        
      - name: Run unit tests
        run: npm run test-coverage

  # release:
  #   runs-on: ubuntu-latest
  #   needs: 
  #     - lint
  #     - test
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: '20.11.1'
  #     - name: Run Semantic-Release
  #       run: npx semantic-release --debug
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.PERSO_GITHUB }}
  #         NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
