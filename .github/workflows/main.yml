name: Node.js CI/CD

on:
  push:
    branches:
      - main

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.11.1'

    - name: Install dependencies
      run: npm install

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Save dependencies cache
      if: success()
      run: |
        npm ci
        mkdir -p ~/.npm
        cp -R node_modules ~/.npm/

  test:
    runs-on: ubuntu-latest
    needs: install

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.11.1'

    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm run test-coverage

  publish:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.11.1'

    - name: Install Semantic Release
      run: npm install -g semantic-release @semantic-release/git @semantic-release/changelog @semantic-release/npm

    - name: Run Semantic Release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: npx semantic-release